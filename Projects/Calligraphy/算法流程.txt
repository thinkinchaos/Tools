算法流程

1、读RGB彩色图
2、画框并记录坐标：
	1）用opencv实现鼠标画框，鼠标左键按下开始记录框的左上角坐标，鼠标左键松开开始记录框的右下角坐标。函数为cv2.setMouseCallback
	2）当键盘按下某个特定按键时，画框过程才结束。
	3）依次保存该过程的所有坐标，存入列表coordinates中。
3、解析坐标为框：
	1）确保列表coordinates中的元素个数为4的倍数，因为一个框有4个坐标值
	2）遍历列表coordinates，每读4个数存为一个框，将该框压入列表rects中。
4、遍历所有框并处理框中数据
	1）对原图以框为范围切片，作为感兴趣区域
	2）对该区域图像处理，提取出效果较好的字体前景：
		a）灰度化
		b）二值化
		c）膨胀两次、腐蚀一次，填充笔划中的微小孔洞，并对字体略加粗，以便处理
	3）提取框的中心坐标：左上坐标和右下坐标之间的均值
	4）找出更准确的字体区域
		a）对框区域求最大轮廓，保留字迹明显的骨干部分
		b）对最大轮廓求外接矩形，以获得字的中心
		c）最大轮廓面积除以外接矩形面积，获得黑色占比
		d）对最大轮廓求矩，以获得字的重心
		e）计算字重心和框中心之间的连接向量
		f）分别通过反三角函数、方差，获得连接向量与x轴的角度、连接向量的长度
	5）提取字体区域的粗细信息
		a）对字体区域切片，获得20*20个小区域，遍历所有小区域
		b）求最小区域的轮廓，若该区域无轮廓，则跳过该区域
		c）找出最大轮廓
		d）根据最大轮廓面积除以小区域面积，获得该小区域的黑色占比
		e）找出黑色占比最大和最小的区域，分别作为最粗处和最细处
		f）对最粗处或最细处的轮廓面积开方，作为粗细度
		g）将最粗处或最细处矩形框的中点作为坐标标点，加上字体区域的坐标，以还原其到整幅图像的坐标
	6）提取字的收笔方向
		a）对字体区域求骨架，最为新的字体区域
		b）对该区域横着切片，划分为20块长条
		c）对最下一块长条求轮廓，并对所有轮廓遍历
		d）对所遍历的轮廓中的坐标进行遍历，若该轮廓坐标中有y坐标最大的点，则判定该轮廓为收笔轮廓，并记录收笔处的坐标
		e）对收笔轮廓求矩，获得轮廓的重心
		f）若上一步执行失败，说明该收笔处为右下区域，认为收笔处重心为收笔坐标减10
		g）通过收笔轮廓重心和收笔点之间的向量，与4-f）中的方法相同，获得收笔处的角度
	7）存数据入excel
5、对整幅图像灰度化、二值化
6、将图像转换到HSV色域，根据红色的色域空间，分割出红色区域
7、对红色区域取反，作为掩码，分割出字体区域
8、对整幅图像采用K-Means均值聚类，获得红色背景的RGB值，以该值作为画布的颜色
9、对字体区域形态学处理，获得模糊的黑团区域
	1）5x5大小的核腐蚀，以消除孤立的噪声点
	2）13x5大小的核膨胀，以横向融合笔划
	3）3x5大小的核膨胀，以纵向融合笔划
10、根据面积筛除二值图中的干扰项，获得更准确的黑团轮廓集
	1）对二值图求轮廓
	2）遍历轮廓，求轮廓面积，若面积小于2000，则存入新的轮廓集合d_contours2
11、对轮廓集遍历，根据字体的黑色占比不同，以不同的灰度值画出黑团
	1）求轮廓的矩，获得其重心
	2）求轮廓的外接矩形，获得其中心坐标和外接圆半径，将中心坐标存入列表centers备用
	3）对轮廓求重心，存入列表weights备用
	4）根据轮廓面积除以外接圆面积，获得黑色占比
	5）找出黑色占比的最大值和最小值，备用
	6）以255*黑色占比作为灰度值，画出黑团
12、同4-5）中的方法，获得最粗处和最细处的坐标，并以它们为圆心，固定值20为半径，颜色为红色，画圆
13、画出每列字的大致方位线和中心点连线
	1）将中心坐标列表转为ndarray格式的矩阵
	2）对该矩阵按照y坐标从小到大排序
	3）将该矩阵转为float32格式，并K-means聚类，类别数为固定值6
	4）以聚类中心为x坐标值，画出大致方位线
	5）对不同聚类中心的中新坐标点分别依次连线，获得中心点连线
14、同的方法，对重心点聚类，画出重心点连线
15、显示并保存图片，并保存excel


		
